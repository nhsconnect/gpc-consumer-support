{
    "resourceType": "Binary",
    "id": "144A1A2EB3B34A66B33B148A5B75959D162EB7EBC9D545D99728198260ED6928",
    "contentType": "text/html",
    "content": "<HTML>
<HEAD>

<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>REBOL/Core Changes</TITLE>

<!--Fonts in px (pixels) for equivalent look on IE, Netscape, etc.-->
<STYLE TYPE="text/css">
BODY, P, TD, OL, UL {
	Font-Family: Arial, Helvetica, sans-serif;
	Font-Size: 13px;
}
PRE, TT {
	Font-Family: "courier new", courier, monospace;
	Font-Size: 13px;
}
H1 {
	Font-Family: Arial, Helvetica, sans-serif;
	Font-Size: 20px;
}
H2 {
	Font-Family: Arial, Helvetica, sans-serif;
	Font-Size: 18px;
}
H3 {
	Font-Family: Arial, Helvetica, sans-serif;
	Font-Size: 15px;
}
HR {Color: black; Height: 3;}
.code {
	Font-Family: "courier new", courier, monospace;
	Font-Size: 10pt;
	Font-Weight: bold;
	Background-color: #E8E8E8;
	Margin-right: 16px;
}
</STYLE>

</HEAD>
<BODY BGCOLOR="white">
<CENTER>
<TABLE WIDTH="680" BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR><TD><A HREF="http://www.rebol.com/docs.html"><IMG SRC="graphics/doc-bar.gif" WIDTH="680" HEIGHT="28" ALIGN="BOTTOM" ALT="REBOL Document" BORDER="0" USEMAP="#bar-map" ISMAP></A></TD></TR>
<TR><TD HEIGHT="24"> </TD></TR>
<TR><TD><H1>REBOL/Core Changes</H1>
<BLOCKQUOTE><B>
    Versions 2.5.0 - 2.5.6<BR>    Updated August 2003
</B></BLOCKQUOTE>
<HR><H2>Contents:</H2>
<BLOCKQUOTE>
<A HREF="#section-1"><B>1. Core 2.5.6</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.1">1.1 Command Line Startup (Fixes CGI/shell scripts)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.2">1.2 Implied Quit</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.3">1.3 Corrupt Datatype Failure</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.4">1.4 Help Native! Fixed</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.5">1.5 Get on NONE</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.6">1.6 Set-Browser-Path</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.7">1.7 DO On Command Line</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.8">1.8 FIND/Any Bug Fixed.</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-1.9">1.9 Molding Empty File Names</A>
<BR>
<A HREF="#section-2"><B>2. Core 2.5.5</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.1">2.1 Main Purpose</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.2">2.2 New Core License</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.3">2.3 Startup Files (user.r and rebol.r)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.4">2.4 How Scripts are Started</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.5">2.5 Command Line Terminator (CR)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.6">2.6 Changes to SECURE</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.7">2.7 MOLD/Flat Refinement</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.8">2.8 Truncation of Series Index (when Past Tail)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.9">2.9 AT on PORTs</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.10">2.10 Added SIXTH Through TENTH Functions</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.11">2.11 Lines Longer Than 4 KB in Direct/Lines Mode</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.12">2.12 DECODE-CGI Handles Duplicate Names</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.13">2.13 ALTER Fixed</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.14">2.14 Network Errors in TRY (Net-Error Throw)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.15">2.15 Extended FTP Directory Paths</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.16">2.16 STATS for SYSTEM/STATS</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-2.17">2.17 PURL Captured</A>
<BR>
<A HREF="#section-3"><B>3. Core 2.5.3</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.1">3.1 Credits</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.2">3.2 MAKE-DIR Rewritten</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.3">3.3 New Bitset Functions: CLEAR, LENGTH?, EMPTY?</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.4">3.4 Changes to SKIP Function</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.5">3.5 ARRAYs Initialized with Block Values</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.6">3.6 Added PARSE BREAK Word</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.7">3.7 Fix to OPEN on Network Ports</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.8">3.8 Fixed Crash on Modified Functions</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.9">3.9 CHANGE Accepts Any Type Value</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.10">3.10 Unset Object Variables (on Exit)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.11">3.11 Added BUILD-MARKUP Function</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.12">3.12 Revised BUILD-TAG Function</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.13">3.13 Revised DECODE-CGI Function</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.14">3.14 UNPROTECT Fixed</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.15">3.15 ALTER added to Core</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.16">3.16 SYSTEM Word Protected</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.17">3.17 Error Message for Word Context</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-3.18">3.18 Fixed Crash on Future Dates</A>
<BR>
<A HREF="#section-4"><B>4. Core 2.5.2</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.1">4.1 CONSTRUCT Object Creator</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.2">4.2 LOAD Change (Important)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.3">4.3 HELP Expanded</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.4">4.4 SUFFIX? Function Added</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.5">4.5 SIGN? Function Added</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.6">4.6 COMPONENT? Function Added</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.7">4.7 SEND Function Updated</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.8">4.8 Miscellaneous Fixes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.8.1"><I>4.8.1 TYPE? (As used in PARSE)</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.8.2"><I>4.8.2 MOLD/ALL</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-4.8.3"><I>4.8.3 FTP</I></A>
<BR>
<A HREF="#section-5"><B>5. Core 2.5.1</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.1">5.1 Source Code Form for Values of NONE, TRUE, etc.</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.2">5.2 Less Aggressive Evaluation (Important!)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.3">5.3 COMPOSE/ONLY Inserts Blocks</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.4">5.4 REMOVE-EACH - Easy Series Element Removal</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.5">5.5 ATTEMPT for Error Handling</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.6">5.6 EXTRACT Function Updated</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.7">5.7 SAVE to Memory</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.8">5.8 SEND Refinements /Subject /Attach</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.9">5.9 Difference for Date/time</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-5.10">5.10 System Port Added</A>
<BR>
<A HREF="#section-6"><B>6. Core 2.5.0</B></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.1">6.1 New Sort Function</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.1.1"><I>6.1.1 Terminology</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.1.2"><I>6.1.2 Arguments</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.1.3"><I>6.1.3 Comparators</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.2">6.2 File Modes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.2.1"><I>6.2.1 Getting Lists of Modes</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.2.2"><I>6.2.2 Modes Available</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.2.3"><I>6.2.3 Using File Forks</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.2.4"><I>6.2.4 Finding All Forks</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.3">6.3 Serial Port Access</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.3.1"><I>6.3.1 Specifying a Serial Port</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.3.2"><I>6.3.2 Operation</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.4">6.4 Objects</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.4.1"><I>6.4.1 Make Object Object</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.4.2"><I>6.4.2 Third Object</I></A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.5">6.5 Mold and Load Changes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.6">6.6 File and Port Changes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.7">6.7 Network Protocol Change (APOP, IMAP)</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.8">6.8 Data Series Changes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.9">6.9 Math Related Changes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.10">6.10 Command Line Changes</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.11">6.11 Console</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.12">6.12 Control</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.13">6.13 Interpreter</A>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#section-6.14">6.14 Other Changes</A>
<BR>
<A HREF="#section-7"><B>7. Interpreter Fixes</B></A>
<BR>
<A HREF="#section-8"><B>8. Networking Fixes</B></A>
<BR>
<A HREF="#section-9"><B>9. Other Function Fixes</B></A>
<BR>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-1"><H2>1. Core 2.5.6</H2></A>
<BLOCKQUOTE>
<P>Miscellaneous fixes made during the version 2.5.6 releases of the
/SDK, /Command, and /SDK/Command products.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.1"><H3>1.1 Command Line Startup (Fixes CGI/shell scripts)</H3></A>
<BLOCKQUOTE>
<P>REBOL ignores CR characters (13) in script files, but a problem
occurred if a CR appeared on the command line that started REBOL.
REBOL would display HELP information. This problem has been fixed and
solves the problem that may occur when you used an FTP binary transfer
of a CGI script to your Linux/Unix web server.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.2"><H3>1.2 Implied Quit</H3></A>
<BLOCKQUOTE>
<P>All REBOL products are now consistent in what they do when a script
has finished running, but did not execute a QUIT. They now now force a
QUIT at the end of the script. If you want to go to the REBOL console,
put a HALT in your script.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.3"><H3>1.3 Corrupt Datatype Failure</H3></A>
<BLOCKQUOTE>
<P>In some situations REBOL would crash at the end of a script with a
"corrupt datatype" error. This was caused by optimizations made in
2.5.3 that freed unused internal structures. The problem would only
occur when a script caused memory recycling and did not include a QUIT
or HALT at its end. This has been fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.4"><H3>1.4 Help Native! Fixed</H3></A>
<BLOCKQUOTE>
<P>Requesting HELP on NATIVE! has been fixed (the native! word has been
restored).</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.5"><H3>1.5 Get on NONE</H3></A>
<BLOCKQUOTE>
<P>A GET of NONE is now allowed and will return NONE.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    print get none
</B></PRE></TD></TR></TABLE>
<P>This makes it easier to write code that fetches values from an object
when the word within the object may be missing. For example, the code
below will no longer cause an error if the word is missing from the
object:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    value: get in object 'word
</B></PRE></TD></TR></TABLE>
<P>This makes code simpler for cases like CGI object form values:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    cgi: construct decode-cgi read-cgi
    name: any [get in cgi 'name "default"]
</B></PRE></TD></TR></TABLE>
<P>In the example above, if the cgi/name does not exist, the default
string is used. No error will occur if the name is missing from the
CGI object.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.6"><H3>1.6 Set-Browser-Path</H3></A>
<BLOCKQUOTE>
<P>The SET-BROWSER-PATH function now accepts REBOL filename format. It
will also accept a string that is in local OS file format (when provided
as a string! type). You can also set it to NONE.</P>
<P>The SET-BROWSER-PATH function will also return it's prior setting.</P>
<P>If you wish to disable this function (for security reasons), you can
set it to NONE or unset the function.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    set-browser-path: none

    unset 'set-browser-path
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-1.7"><H3>1.7 DO On Command Line</H3></A>
<BLOCKQUOTE>
<P>The --do option is processed again on the command line. This allows
you to pass expressions to be executed from the shell command line.
For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    rebol --do "probe system/options/args"
</B></PRE></TD></TR></TABLE>
<P>Note that --do now happens after the rebol.r and user.r files are
evaluated (letting you initialize your own custom functions and
values) but before the script on the command line is evaluated.</P>
<P>The --do option can be used to define variables prior to the
execution of your script. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    rebol make-website.r --do "verbose: true"
</B></PRE></TD></TR></TABLE>
<P>would set the VERBOSE variable to TRUE at the start of execution. To
set the default value in the script, you might use code such as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    if not value? 'verbose [verbose: false]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-1.8"><H3>1.8 FIND/Any Bug Fixed.</H3></A>
<BLOCKQUOTE>
<P>A serious error was reported related to using FIND with the /any
refinement (wildcards). For some cases FIND/any would return a valid
string rather than NONE. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    find/any next "abc" "d"
</B></PRE></TD></TR></TABLE>
<P>returned "c". This problem has been fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-1.9"><H3>1.9 Molding Empty File Names</H3></A>
<BLOCKQUOTE>
<P>MOLDing an empty filename resulted in source code that could not be
loaded. In rare cases, this might case a SAVE to create a file that
LOAD could not handle. Molding an empty file name now outputs the
characters %"" to avoid this problem. This fixes the problem in MOLD,
SAVE, and PROBE.</P>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-2"><H2>2. Core 2.5.5</H2></A>
<BLOCKQUOTE>
</BLOCKQUOTE>
<P>
<A NAME="section-2.1"><H3>2.1 Main Purpose</H3></A>
<BLOCKQUOTE>
<P>The primary purpose of the Core 2.5.5 release is to bring
REBOL/Core into closer compatibility with the new Mac OS X and
REBOL/SDK kernels.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.2"><H3>2.2 New Core License</H3></A>
<BLOCKQUOTE>
<P>REBOL/Core licensed has changed to allow personal, educational,
or commercial use of the CORE software free of charge.</P>
<P>Note that this license change only applies to REBOL/Core (and
will be added to the next release of REBOL/View), but it does
not apply to REBOL/SDK, /Command, /IOS or other REBOL commercial
products.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.3"><H3>2.3 Startup Files (user.r and rebol.r)</H3></A>
<BLOCKQUOTE>
<P>Beta V2.5.4 did not evaluate the rebol.r and user.r files.
V2.5.5 evaluates them again, although using a slightly different
method.  This should not affect your program. The order is still:</P>
<OL>
<LI>Check the current directory first.
<LI>Check the system/options/home directory second.
</OL>
<P>This allows you to have a single standard rebol.r file (and
optionally a user.r file) that is shared by all users on
multiuser systems.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.4"><H3>2.4 How Scripts are Started</H3></A>
<BLOCKQUOTE>
<P>The method used to start initial scripts has been modified.</P>
<P>This change will have no affect on your programs, but it will
produce a better error message on script errors by eliminating
the error line that refers to the problem being "Near do-boot".
That line was confusing to new users, because do-boot was not
part of their script file.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.5"><H3>2.5 Command Line Terminator (CR)</H3></A>
<BLOCKQUOTE>
<P>REBOL no longer shows Usage info if a CR char is passed from
a Unix shell on the shell command line.</P>
<P>Although REBOL scripts properly read and load with respect to
the CR (ASCII 13) character, some operating systems will pass
the CR as a command line argument, causing older versions of
REBOL to print its usage help information.</P>
<P>For example, you might see a problem with a CGI shell script
starting with:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #!/home/user/rebol -cs
    REBOL [...]
</B></PRE></TD></TR></TABLE>
<P>that was written on a Windows system and transferred to Linux
without converting line terminators.</P>
<P>This case has been fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.6"><H3>2.6 Changes to SECURE</H3></A>
<BLOCKQUOTE>
<P>Beta V2.5.4 did not set SECURE prior to running scripts (in
other words, it functioned like REBOL/Base).</P>
<P>With V2.5.5 security is being set again, although with a slight
change: by default you can now write to a script's target
directory. For example, if you run:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    REBOL /home/test/script.r
</B></PRE></TD></TR></TABLE>
<P>REBOL will startup with WRITE access to /home/test. All other
directories will be set to READ only (with WRITE ask).</P>
<P>This change makes it easier for users to write scripts that
write and update local data files without the need to provide a
-S command line option, but it still protects the rest of your
files.</P>
<P>Note that the +S command line option has also been changed.
Previously, +S meant SECURE QUIT, which was almost useless
because your REBOL would QUIT as soon as it tried to read its
rebol.r and user.r files.  Now +S means SECURE ASK, so running
with:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    rebol +s script.r
</B></PRE></TD></TR></TABLE>
<P>Will prompt the user for all READ/WRITE operations for files and
networking. A safe mode of operation, but less strict than
before.</P>
<P>In addition, the --secure options should also work again now:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    rebol --secure allow script.r
    rebol --secure ask script.r
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-2.7"><H3>2.7 MOLD/Flat Refinement</H3></A>
<BLOCKQUOTE>
<P>The /flat refinement allows you to MOLD code and data without
line indentation, making the resulting string smaller (for sending
over a network, storing as compressed data, encapping, etc.).</P>
<P>For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    blk: [
        name [
            first "Bob"
            last "Smith"
        ]
        options [
            colors [
                red
                green
                blue
            ]
        ]
    ]

    &gt;&gt;print mold blk
    [
        name [
            first "Bob"
            last "Smith"
        ]
        options [
            colors [
                red
                green
                blue
            ]
        ]
    ]

    &gt;&gt; print mold/flat blk
    [
    name [
    first "Bob"
    last "Smith"
    ]
    options [
    colors [
    red
    green
    blue
    ]
    ]
    ]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-2.8"><H3>2.8 Truncation of Series Index (when Past Tail)</H3></A>
<BLOCKQUOTE>
<P>The handling of an "past the tail" series index has been changed.</P>
<P>In prior versions of REBOL, referring to a series past its tail
would cause an error:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; a: "ABC"
    == "ABC"
    &gt;&gt; b: next a
    == "BC"
    &gt;&gt; clear a
    == ""
    &gt;&gt; insert b "X"
    ** Script Error: Out of range or past end
    ** Near: insert b "X"
</B></PRE></TD></TR></TABLE>
<P>In some situations, this problem could become difficult to detect,
because nearly any reference to B would cause the error.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; tail? b
    ** Script Error: Out of range or past end
    ** Near: tail? b
</B></PRE></TD></TR></TABLE>
<P>As a result, the "past end" handling has been relaxed. For many
functions, the index will now truncate to the current tail of
the series:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; a: "ABC"
    == "ABC"
    &gt;&gt; b: next a
    == "BC"
    &gt;&gt; clear a
    == ""
    &gt;&gt; tail? b
    == true
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-2.9"><H3>2.9 AT on PORTs</H3></A>
<BLOCKQUOTE>
<P>The AT function (similar to the SKIP function) now works for the
Port datatype.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.10"><H3>2.10 Added SIXTH Through TENTH Functions</H3></A>
<BLOCKQUOTE>
<P>Five new ordinal functions have been added:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    sixth
    seventh
    eighth
    ninth
    tenth
</B></PRE></TD></TR></TABLE>
<P>The benefit of these function becomes more clear when you
consider using them to pick values from a series (instead of
using an object field).</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    name-of: :first
    age-of:  :second
    date-of: :third
    ...
    product-of: :ninth
    ...
    if empty? product-of record [print "missing product"]
</B></PRE></TD></TR></TABLE>
<P>The line above is much more readable than:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    if empty? ninth record [print "missing product"]
</B></PRE></TD></TR></TABLE>
<P>Here's a handy utility function for creating such named
accessors:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ordain: func [
        "Defines ordinal accessors (synonyms)."
        words [block!] /local ords
    ][
        ords: [first second third fourth fifth
            sixth seventh eighth ninth tenth]
        foreach word words [
            set word get first ords
            ords: next ords
        ]
    ]
</B></PRE></TD></TR></TABLE>
<P>The above example would then be simplified to:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ordain [name-of age-of date-of ... product-of]
    ...
    if empty? product-of record [print "missing product"]
</B></PRE></TD></TR></TABLE>
<P><I>Question: Would you like to see ordain become a regular
function in REBOL? Tell us via <A
HREF="http://www.rebol.com/feedback.html">Feedback</A>.</I></P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.11"><H3>2.11 Lines Longer Than 4 KB in Direct/Lines Mode</H3></A>
<BLOCKQUOTE>
<P>Earlier versions of REBOL did not properly expand their internal
line buffers beyond 4 KB for files opened in direct/lines mode.
As a result, lines longer than 4 KB (no line terminators for
more than 4 KB) would not be read correctly and would cause an
end of file. This problem has been fixed in the current release.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.12"><H3>2.12 DECODE-CGI Handles Duplicate Names</H3></A>
<BLOCKQUOTE>
<P>With increased use of REBOL for CGI scripts, we've expanded
the DECODE-CGI function to handle duplicate name fields.</P>
<P>For example, checklists used in web forms may return multiple
values for a single variable. DECODE-CGI will now make these
multivalued returns into blocks:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; cgi-str: {name=bob&amp;option=view&amp;option=email&amp;}
    &gt;&gt; decode-cgi cgi-str
    == [name: "bob" option: ["view" "email"]]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-2.13"><H3>2.13 ALTER Fixed</H3></A>
<BLOCKQUOTE>
<P>A serious error in the ALTER function (a data set flagging
function, see updated docs in <A
HREF="http://www.rebol.com/docs/dictionary.html">The REBOL
Dictionary</A>) caused it to malfunction. This problem has been
fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.14"><H3>2.14 Network Errors in TRY (Net-Error Throw)</H3></A>
<BLOCKQUOTE>
<P>The NET-ERROR function used THROW for errors, rather than just
letting the error throw itself. This caused some types of
network errors to bypass a higher level catch when using TRY.</P>
<P>This meant that if you used a TRY around sections of your code,
certain network errors (such as an SMTP problem) may be thrown
past it, which would cause the error to be passed all the way
out to user at the console. This was a problem for SDK scripts,
and has been fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.15"><H3>2.15 Extended FTP Directory Paths</H3></A>
<BLOCKQUOTE>
<P>When using FTP URLs, there was no easy way to provide a full path
from the root directory.</P>
<P>For example, your logon directory may be:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    /home/luke/
</B></PRE></TD></TR></TABLE>
<P>but you want to refer to:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    /var/log/
</B></PRE></TD></TR></TABLE>
<P>In the new release, you can use a double slash URL to provide
the absolute directory path:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    read ftp://user:pass@host//var/log/messages
</B></PRE></TD></TR></TABLE>
<P>(Please tell us if you have any problems using this format.)</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.16"><H3>2.16 STATS for SYSTEM/STATS</H3></A>
<BLOCKQUOTE>
<P>The STATS function is now directly accessible. You no longer need
to use SYSTEM/STATS.</P>
<P>In addition, the STATS function now more accurately computes
memory usage.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-2.17"><H3>2.17 PURL Captured</H3></A>
<BLOCKQUOTE>
<P>The variable PURL used in DECODE-URL is now a local variable
rather than a global.</P>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-3"><H2>3. Core 2.5.3</H2></A>
<BLOCKQUOTE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.1"><H3>3.1 Credits</H3></A>
<BLOCKQUOTE>
<P>Thanks go to these contributors for their feedback, suggestions, or
solutions:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Andrew Martin
    "Anton"
    Cal Dixon 
    Carl Sassenrath
    Ernie van der Meer
    Gregg Irwin
    Ladislav Mecir
    Maarten Koopmans
    "Mr. Martin Mr. Saint"
    Reichart Von Wolfsheild
</B></PRE></TD></TR></TABLE>
<P>Did we miss your feedback or contribution to fixes or improvements?
If so, tell us at: <A HREF="http://www.rebol.com/feedback.html">
http://www.rebol.com/feedback.html</A>.</P>
<P>It is not always possible to get every change into each new
release, but if you have found a bug that's causing you
problems, please let us know and we'll do our best to fix it.
Provide a very short, repeatable example of the problem, and if
you have a fix to the problem, send that along as well. (You'll
see the fix happen much faster that way.)</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.2"><H3>3.2 MAKE-DIR Rewritten</H3></A>
<BLOCKQUOTE>
<P>The MAKE-DIR function has been rewritten and now works
correctly. In addition, it has been relaxed to not cause an
error when the specified directory exists. Use the EXISTS?
function if you need to check that.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.3"><H3>3.3 New Bitset Functions: CLEAR, LENGTH?, EMPTY?</H3></A>
<BLOCKQUOTE>
<P>Three new functions (actions) have been added to bitsets:</P>
<P>The CLEAR function quickly clears all bits to zero.</P>
<P>The LENGTH? function returns the number of bits in the bitset
(always multiple of 8).</P>
<P>The EMPTY? function returns TRUE if any bit is set, otherwise
it returns FALSE.  (Note that EMPTY? is the same function as
TAIL?; therefore, TAIL? also returns the same results, but the
word has no meaning for bitsets.)</P>
<P>Bitsets are used as high performance logic arrays for character
sets and hashes.</P>
<P>Examples:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; items: make bitset! 40
    == make bitset! #{0000000000}

    &gt;&gt; length? items
    == 40

    &gt;&gt; empty? items
    == true

    &gt;&gt; insert items 10
    == make bitset! #{0004000000}

    &gt;&gt; empty? items
    == false

    &gt;&gt; clear items
    == make bitset! #{0000000000}

    &gt;&gt; empty? items
    == true

    &gt;&gt; empty? negate items
    == false
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.4"><H3>3.4 Changes to SKIP Function</H3></A>
<BLOCKQUOTE>
<P>There are three changes to SKIP that you should note:</P>
<P>1. SKIP now handles decimal offsets correctly. Values are
truncated down to lower integer value. (Note that decimal
offsets should be used with caution because 1.9999999 is not the
same as 2.0 when it comes to indexing.)</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; skip "abc" 1.9999999
    == "bc"
    &gt;&gt; skip "abc" 2.0
    == "c"
</B></PRE></TD></TR></TABLE>
<P>2. SKIP can have a logic offset. It is made consistent with PICK
and AT when used with logic offsets.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; pick [red green] true
    == red
    &gt;&gt; skip [red green] true
    == [red green]
    &gt;&gt; at [red green] true
    == [red green]

    &gt;&gt; pick [red green] false
    == green
    &gt;&gt; skip [red green] false
    == [green]
    &gt;&gt; at [red green] false
    == [green]
</B></PRE></TD></TR></TABLE>
<P>For logic offsets, SKIP is identical to AT.</P>
<P>3. SKIP on images will offset pixels, not RGBA bytes. This is
consistent with AT, PICK, and POKE.  If you are currently using
skip on images, this change will affect your code.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.5"><H3>3.5 ARRAYs Initialized with Block Values</H3></A>
<BLOCKQUOTE>
<P>If a block value is provided as the initial element value in 
the ARRAY function, each element should be the block, not the
contents of the block.</P>
<P>In addition, if the initial value is a SERIES of any type (e.g.
string, block, email, url) it will be deep copied into each
array element (that is, the value of each element will be unique,
not shared).</P>
<P>As an example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; a: array/initial [2 3] [1 2]
    == [[[1 2] [1 2] [1 2]] [[1 2] [1 2] [1 2]]]
    &gt;&gt; append a/1/2 3
    == [1 2 3]
    &gt;&gt; a
    == [[[1 2] [1 2 3] [1 2]] [[1 2] [1 2] [1 2]]]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.6"><H3>3.6 Added PARSE BREAK Word</H3></A>
<BLOCKQUOTE>
<P>Within some types of PARSE loops such as ANY and SOME, it can
sometimes be difficult to write rules that terminate the loop.
This happens primarily when using general rules that try to
capture "all other cases" within the loop. For example, code
such as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    parse item [
        any [
            "word" (print "got word")
            | copy value [to "abc" | to end]
                (print value)
        ]
    ]
</B></PRE></TD></TR></TABLE>
<P>will end up looping forever because the second rule within the
ANY will always succeed, and the ANY will never terminate.</P>
<P>To help solve this problem, the BREAK keyword was added to the
parse dialect. Its use is simple.  When the BREAK word is
encountered within a rule block, the block is immediately
terminated regardless of the current input pointer. Expressions
that follow the BREAK within the same rule block will not be
evaluated.</P>
<P>The above example can now be written as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    parse item [
        any [
            "word" (print "got word")
            | copy value [to "abc" | to end]
                (print value) break
        ]
    ]
</B></PRE></TD></TR></TABLE>
<P>The ANY loop will be terminated after the second rule.</P>
<P>Generally, for ANY rule blocks that need to terminate at the end
of the input stream, you can add an END check followed by the
BREAK keyword, such as in this example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    parse item [
        any [
              end break
            | "word" (print "got word")
            | copy value [to "abc" | to end]
                (print value)
        ]
    ]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.7"><H3>3.7 Fix to OPEN on Network Ports</H3></A>
<BLOCKQUOTE>
<P>OPEN on network port under some versions of Windows32 would fail
due to an incorrect error code returned from WinSock library (as
documented by Microsoft). Fixed.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.8"><H3>3.8 Fixed Crash on Modified Functions</H3></A>
<BLOCKQUOTE>
<P>Fixed the crash that happened when modifying a function's value
while evaluating its arguments. For example, the code below:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    a: func [x] [print x]
    b: func [] [a: 42]
    a b
</B></PRE></TD></TR></TABLE>
<P>no longer causes a crash.</P>
<P>Note that modifying a function while it is evaluating may
produce odd results that may vary between implementation
versions and should generally be avoided.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.9"><H3>3.9 CHANGE Accepts Any Type Value</H3></A>
<BLOCKQUOTE>
<P>To be consistent with INSERT, the CHANGE function allows
a new value to be any datatype (ANY-TYPE!).</P>
<P>Users should be aware that a missing value argument will
result in a CHANGE value of UNSET!, not an error.</P>
<P>For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; a: [10]
    == [10]
    &gt;&gt; do [change a]
    == []
    &gt;&gt; probe a
    [unset]
    == [unset]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.10"><H3>3.10 Unset Object Variables (on Exit)</H3></A>
<BLOCKQUOTE>
<P>If exit occurs during object evaluation, unassigned variables
not copied from parent object are unset. Fixes the "end" bug
where the first variable was set to the END! datatype.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; probe make object! [exit a: b:]
    == make object! [
        a: unset
        b: unset
    ]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.11"><H3>3.11 Added BUILD-MARKUP Function</H3></A>
<BLOCKQUOTE>
<P>This function was inspired by the EREBOL concept of Maarten
Koopmans and Ernie van der Meer. Essentially, the idea is that
REBOL makes a powerful PHP style markup processor for generating
web pages and other markup text.</P>
<P>The BUILD-MARKUP function has been added to support this
operation, and will become a standard part of every REBOL
implementation.</P>
<P>The BUILD-MARKUP function takes markup text (e.g. HTML) that
contains tags that begin with "&lt;%" and end with "%&gt;". It
evaluates the REBOL code within each tag (as if it were a REBOL
block), and replaces the tag with the result. Any REBOL
expression can be placed within the tag. As PHP has shown, this
is a very useful technique.</P>
<P>For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    == build-markup "&lt;%1 + 2%&gt;"
    &gt;&gt; "3"

    == build-markup "&lt;B&gt;&lt;%1 + 2%&gt;&lt;/B&gt;"
    &gt;&gt; "&lt;B&gt;3&lt;/B&gt;"

    == build-markup "&lt;%now%&gt;"
    &gt;&gt; "2-Aug-2002/18:01:46-7:00"

    == build-markup "&lt;B&gt;&lt;%now%&gt;&lt;/B&gt;"
    &gt;&gt; "&lt;B&gt;2-Aug-2002/18:01:46-7:00&lt;/B&gt;"
</B></PRE></TD></TR></TABLE>
<P>Supplying a &lt;%now%&gt; tag to BUILD-MARKUP inserts
the current date/time in the output.</P>
<P>Here's a short example that generates a web page from a template
and a custom name and email address:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    template: {&lt;HTML&gt;
        &lt;BODY&gt;
        Hi &lt;%name%&gt;, your email is &lt;i&gt;&lt;%email%&gt;&lt;/i&gt;.&lt;P&gt;
        &lt;/BODY&gt;
        &lt;/HTML&gt;
    }

    name: "Bob"
    email: bob@example.com
    page: build-markup template
</B></PRE></TD></TR></TABLE>
<P>Don't forget the two % characters within the tag. It's a common
mistake.</P>
<P>The value that is returned from the tag code is normally
"joined" into the output.  You can also use FORM or MOLD on the
result to get the type of output you require. The example below
loads a list of files from the current directory and displays
them three different ways:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input: "&lt;PRE&gt;&lt;%load %.%&gt;&lt;/PRE&gt;"
    Result: {&lt;PRE&gt;build-markup.rchanges.txt&lt;/PRE&gt;}

    Input: "&lt;PRE&gt;&lt;%form load %.%&gt;&lt;/PRE&gt;"
    Result: {&lt;PRE&gt;build-markup.r changes.txt&lt;/PRE&gt;}

    Input: "&lt;PRE&gt;&lt;%mold load %.%&gt;&lt;/PRE&gt;"
    Result: {&lt;PRE&gt;[%build-markup.r %changes.txt]&lt;/PRE&gt;}
</B></PRE></TD></TR></TABLE>
<P>If the evaluation of a tag does not return a result (for example
using code such as print "test"), then nothing is output. In
this case, the output of PRINT will be sent to the standard
output device.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input: {&lt;NO-TEXT&gt;&lt;%print "test"%&gt;&lt;/NO-TEXT&gt;}
    test
    Result: "&lt;NO-TEXT&gt;&lt;/NO-TEXT&gt;"
</B></PRE></TD></TR></TABLE>
<P>The BUILD-TAG function can be used within the tag for converting
REBOL values into markup output:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input: {&lt;%build-tag [font color "red"]%&gt;}
    Result: {&lt;font color="red"&gt;}
</B></PRE></TD></TR></TABLE>
<P>Tags can set and use variables in the same way as any REBOL
script. For example, the code below loads a list of files from
the current directory, saves it in a variable, then prints two
file names:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input: "&lt;PRE&gt;&lt;%first files: load %.%&gt;&lt;/PRE&gt;"
    Result: {&lt;PRE&gt;build-markup.r&lt;/PRE&gt;}

    Input: "&lt;PRE&gt;&lt;%second files%&gt;&lt;/PRE&gt;"
    Result: {&lt;PRE&gt;changes.txt&lt;/PRE&gt;}
</B></PRE></TD></TR></TABLE>
<P>Note that variables used within tags are always global variables.</P>
<P>If an error occurs within a tag, an error message will appear
as the tag's result. This allows you to see web page errors
from any HTML browser.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input: "&lt;EXAMPLE&gt;&lt;%cause error%&gt;&lt;/EXAMPLE&gt;"
    Result: {&lt;EXAMPLE&gt;***ERROR no-value in: cause error&lt;/EXAMPLE&gt;}
</B></PRE></TD></TR></TABLE>
<P>If you do not want error messages to be output, use the /QUIET
refinement.  The example above would result in:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Result: "&lt;EXAMPLE&gt;&lt;/EXAMPLE&gt;"
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.12"><H3>3.12 Revised BUILD-TAG Function</H3></A>
<BLOCKQUOTE>
<P>The previous version of BUILD-TAG generated poor results for
most input combinations. It has been replaced by a new function
that was contributed by Andrew Martin.  This function produces
better results, but ones that are different from the previous
function. If you are currently using BUILD-TAG, you will need to
adjust your code.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    In:  [input "checked" type "radio" name "Favourite" value "cat"]
    Old: {&lt;input="checked" type="radio" name="Favourite" value="cat"&gt;}
    New: {&lt;input checked type="radio" name="Favourite" value="cat"&gt;}

    In:  [html xml:lang "en"]
    Old: {&lt;html="xml:lang"="en"&gt;}
    New: {&lt;html xml:lang="en"&gt;}

    In:  [body text #FF80CC]
    Old: {&lt;body text="FF80CC"&gt;}
    New: {&lt;body text="#FF80CC"&gt;}

    In:  [a href %Test%20File%20Space.txt]
    Old: {&lt;a href="Test File Space.txt"&gt;}
    New: {&lt;a href="Test%20File%20Space.txt"&gt;}

    In:  [/html gibber %Froth.txt]
    Old: {&lt;/html gibber="Froth.txt"&gt;}
    New: "&lt;/html&gt;"

    In:  [?xml version "1.0" encoding "UTF-8"]
    Old: {&lt;?xml version="1.0" encoding="UTF-8"&gt;}
    New: {&lt;?xml version="1.0" encoding="UTF-8"?&gt;}

    In:  [html xmlns http://w3.org/xhtml xml:lang "en" lang "en"]
    Old: {&lt;html xmlns="http://w3.org/xhtml"="xml:lang"="en" lang="en"&gt;}
    New: {&lt;html xmlns="http://w3.org/xhtml" xml:lang="en" lang="en"&gt;}

    In:  [html xmlns http://w3.org/xhtml/ xml:lang "en" lang "en"]
    Old: {&lt;html xmlns="http://w3.org/xhtml/"="xml:lang"="en" lang="en"&gt;}
    New: {&lt;html xmlns="http://w3.org/xhtml/" xml:lang="en" lang="en"&gt;}
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-3.13"><H3>3.13 Revised DECODE-CGI Function</H3></A>
<BLOCKQUOTE>
<P>Several bugs have been fixed in DECODE-CGI. More specifically,
the function handles empty attribute assignments.  Here are some
examples:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Input:   "name=val1&amp;name=val2"
    Decoded: [name: "val1" name: "val2"]

    Input:   "name1=val1&amp;name2&amp;name3=&amp;name4=val3"
    Decoded: [name1: "val1" name2: "" name3: "" name4: "val3"]

    Input:   "name1="
    Decoded: [name1: ""]

    Input:   "name2&amp;"
    Decoded: [name2: ""]

    Input:   "name3=&amp;"
    Decoded: [name3: ""]

    Input:   "name4=val"
    Decoded: [name4: "val"]

    Input:   "name5=val&amp;"
    Decoded: [name5: "val"]
</B></PRE></TD></TR></TABLE>
<P>The new function is based on Andrew Martin's contribution. Thanks!</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.14"><H3>3.14 UNPROTECT Fixed</H3></A>
<BLOCKQUOTE>
<P>Attempting to UNPROTECT a block containing any value other than
a word could cause a crash.  Now non-word values are ignored.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.15"><H3>3.15 ALTER added to Core</H3></A>
<BLOCKQUOTE>
<P>The ALTER function found only in View is general purpose and has
been made available in all version of REBOL.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.16"><H3>3.16 SYSTEM Word Protected</H3></A>
<BLOCKQUOTE>
<P>To help prevent an accidental beginner mistake that is difficult
to debug, the SYSTEM and REBOL words are now protected.  If you
need to change them, use UNPROTECT first.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.17"><H3>3.17 Error Message for Word Context</H3></A>
<BLOCKQUOTE>
<P>The error message "word not defined in this context" has been
changed to "word has no context" to better indicate that the
word has never been defined (more precisely, never been bound)
in the context of an object, function, or global environment.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-3.18"><H3>3.18 Fixed Crash on Future Dates</H3></A>
<BLOCKQUOTE>
<P>Prevents startup crash caused by error in Microsoft Windows time
functions when running with system date set to greater than 2036.</P>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-4"><H2>4. Core 2.5.2</H2></A>
<BLOCKQUOTE>
</BLOCKQUOTE>
<P>
<A NAME="section-4.1"><H3>4.1 CONSTRUCT Object Creator</H3></A>
<BLOCKQUOTE>
<P>We've added a "light-evaluation" object creator to provide a
higher level of security for imported data objects. The function
is called CONSTRUCT and it makes new objects, but without a
normal evaluation of the object's specification (as is done in
the MAKE and CONTEXT functions).</P>
<P>When you CONSTRUCT an object, only literal types are accepted.
Functional evaluation is not performed. This allows your code to
directly import objects (such as those sent from unsafe external
sources such as email, cgi, etc.) without concern that they may
include "hidden" side effects using executable code.</P>
<P>CONSTRUCT is used in the same way as the CONTEXT function:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    obj: construct [
        name: "Fred"
        age: 27
        city: "Ukiah"
    ]
</B></PRE></TD></TR></TABLE>
<P>but, no evaluation takes place.  That means object
specifications like:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    obj: construct [
        name: uppercase "Fred"
        age: 20 + 7
        time: now
    ]
</B></PRE></TD></TR></TABLE>
<P>do not produce their evaluated results.</P>
<P>The CONSTRUCT function is useful for importing external
objects. For example, loading preference settings from
a file can done with:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    prefs: construct load %prefs.r
</B></PRE></TD></TR></TABLE>
<P>Similarly, you can use CONSTRUCT to load a CGI or email
response.</P>
<P>To provide a template object that contains default variable
values (similar to MAKE), use the /AS refinement. The example
below would use an existing object called standard-prefs as the
template.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    prefs: construct/as load %prefs.r standard-prefs
</B></PRE></TD></TR></TABLE>
<P>The CONSTRUCT function will perform evaluation on the words
TRUE, FALSE, NONE, ON, and OFF to produce their expected
values.  Literal words and paths will also be evaluated
to produce their respective words and paths.  For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    obj: construct [
        a: true
        b: none
        c: 'word
    ]
</B></PRE></TD></TR></TABLE>
<P>The obj/a value would be logical TRUE, obj/b would be NONE, and
obj/c would be WORD.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-4.2"><H3>4.2 LOAD Change (Important)</H3></A>
<BLOCKQUOTE>
<P>Script header objects are now created by the CONSTRUCT function
and they are no longer evaluated.</P>
<P>This change provides a greater level of default security when
the LOAD function is used to load REBOL data.  The change should
affect very few scripts (only those that depend on evaluated
header variables -- rare.)</P>
<P>The LOAD function can be used safely without the need to use
LOAD/ALL to inspect a script header prior to evaluation.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-4.3"><H3>4.3 HELP Expanded</H3></A>
<BLOCKQUOTE>
<P>Help can now be used to explore the fields of an object in a
user-friendly format. For example, typing this line at the
prompt:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    help system
</B></PRE></TD></TR></TABLE>
<P>will produce this result:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    SYSTEM is an object of value:
       version         tuple!    1.0.4.3.1
       build           date!     1-May-2002/13:31:11-7:00
       product         word!     Link
       components      block!    length: 45
       words           object!   [unset! error! datatype! context! native
       license         string!   {REBOL End User License Agreement IMPORT
       options         object!   [home script path boot args do-arg link-
       user            object!   [name email home words]
       script          object!   [title header parent path args words]
       console         object!   [history keys prompt result escape busy 
       ports           object!   [input output echo system serial wait-li
       network         object!   [host host-address]
       schemes         object!   [default Finger Whois Daytime SMTP POP I
       error           object!   [throw note syntax script math access co
       standard        object!   [script port port-flags email face sound
       view            object!   [screen-face focal-face caret highlight-
       stats           native!   System statistics. Default is to return 
       locale          object!   [months days]
       user-license    object!   [name email id message]
</B></PRE></TD></TR></TABLE>
<P>This works for other types of objects as well as user-created
objects. The code below would display the contents of the
text-face object created by a View layout:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    out: layout [text-face: text "test"]

    help text-face
</B></PRE></TD></TR></TABLE>
<P>Sub-objects can also be viewed. They are specified as paths.
For example, to see the options object of the system object:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    help system/options
</B></PRE></TD></TR></TABLE>
<P>The result would look something like this:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    SYSTEM/OPTIONS is an object of value:
       home            file!     %/d/rebol/link/
       script          file!     %/d/rebol/link/ranch/utilities/console.r
       path            file!     %/d/rebol/link/ranch/
       boot            file!     %/d/rebol/link/rebol-link.exe
       args            none!     none
       do-arg          none!     none
       link-url        string!   "tcp://localhost:4028"
       server          none!     none
       quiet           logic!    true
       trace           logic!    false
       help            logic!    false
       install         logic!    false
       boot-flags      integer!  2064
       binary-base     integer!  16
       cgi             object!   [server-software server-name gateway-int
</B></PRE></TD></TR></TABLE>
<P>In addition, the search feature in help now provides more
information about matches that were made.  If you type:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    help "to-"
</B></PRE></TD></TR></TABLE>
<P>You will now see:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    Found these words:
       caret-to-offset native!   Returns the offset position relative to 
       offset-to-caret native!   Returns the offset in the face's text co
       to-binary       function! Converts to binary value.
       to-bitset       function! Converts to bitset value.
       to-block        function! Converts to block value.
       to-char         function! Converts to char value.
       to-date         function! Converts to date value.
       to-decimal      function! Converts to decimal value.
       to-email        function! Converts to email value.
       to-event        function! Converts to event value.
       to-file         function! Converts to file value.
       to-get-word     function! Converts to get-word value.
       to-hash         function! Converts to hash value.
       to-hex          native!   Converts an integer to a hex issue!.
       to-idate        function! Returns a standard Internet date string.
       to-image        function! Converts to image value.
       to-integer      function! Converts to integer value.
       to-issue        function! Converts to issue value.
       to-list         function! Converts to list value.
       to-lit-path     function! Converts to lit-path value.
       to-lit-word     function! Converts to lit-word value.
       to-local-file   native!   Converts a REBOL file path to the local 
       to-logic        function! Converts to logic value.
       to-money        function! Converts to money value.
       to-none         function! Converts to none value.
       to-pair         function! Converts to pair value.
       to-paren        function! Converts to paren value.
       to-path         function! Converts to path value.
       to-rebol-file   native!   Converts a local system file path to a R
       to-refinement   function! Converts to refinement value.
       to-set-path     function! Converts to set-path value.
       to-set-word     function! Converts to set-word value.
       to-string       function! Converts to string value.
       to-tag          function! Converts to tag value.
       to-time         function! Converts to time value.
       to-tuple        function! Converts to tuple value.
       to-url          function! Converts to url value.
       to-word         function! Converts to word value.
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-4.4"><H3>4.4 SUFFIX? Function Added</H3></A>
<BLOCKQUOTE>
<P>The SUFFIX? function is a helper function that returns the
file "extension" portion of a filename or URL. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; suffix? %into.txt
    == %.txt

    &gt;&gt; suffix? http://www.rebol.com/docs.html
    == %.html

    &gt;&gt; suffix? %test
    == none

    &gt;&gt; suffix? %test.it/file
    == none
</B></PRE></TD></TR></TABLE>
<P>SUFFIX? can be useful when selecting files from a directory.
The example below will only select html and htm files:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    foreach file load %. [
        if find [%.html %.htm] suffix? file [
            browse file
        ]
    ]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-4.5"><H3>4.5 SIGN? Function Added</H3></A>
<BLOCKQUOTE>
<P>The SIGN? function returns a positive, zero, or negative integer
based on the sign of its argument.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    print sign? 1000
    print sign? 0
    print sign? -1000
</B></PRE></TD></TR></TABLE>
<P>The sign is returned as an integer to allow it to be used
as a multiplication term within an expression:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    new: 2000 * sign val

    if size &gt; 10 [xy: 10x20 * sign num]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-4.6"><H3>4.6 COMPONENT? Function Added</H3></A>
<BLOCKQUOTE>
<P>COMPONENT? is a helper function that checks for the existence of
a named REBOL component.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    if component? 'crypt [print "Encryption available."]

    if not component? 'sound [print "No sound."]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-4.7"><H3>4.7 SEND Function Updated</H3></A>
<BLOCKQUOTE>
<P>The SEND function now includes a /SHOW refinement that will show
all TO recipients in the header. By default, recipients are not
normally shown.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    send/show [bob@example.com fred@example.com] message
</B></PRE></TD></TR></TABLE>
<P>In addition the FROM field will include the sender's name as well
as an email address.  The string in system/user/name is used as the
from address.  For example, if:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    system/user/name: "Fred Reboller"
</B></PRE></TD></TR></TABLE>
<P>Then when the email is sent, the from field will now appear as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    From: Fred Reboller &lt;fred@example.com&gt;
</B></PRE></TD></TR></TABLE>
<P>If system/user/name is NONE or empty, it will not be used.</P>
<P>Finally, some problems in the /ATTACH refinement have been
fixed. Attachments of the form:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    send/attach user content [[%file.txt "text message"]]
</B></PRE></TD></TR></TABLE>
<P>should work properly now. See 2.5.1 notes on SEND for more
information about /ATTACH.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-4.8"><H3>4.8 Miscellaneous Fixes</H3></A>
<BLOCKQUOTE>
<P>
<A NAME="section-4.8.1"><H4>4.8.1 TYPE? (As used in PARSE)</H4></A>
<P>Fixed the problem reported in the TYPE? function that caused the
datatype error in PARSE. Code of the form below will work
properly now:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    parse [34] reduce [type? 34]
    parse [34.5] reduce [type? 34.5]
</B></PRE></TD></TR></TABLE>
<P>
<A NAME="section-4.8.2"><H4>4.8.2 MOLD/ALL</H4></A>
<P>Fixed the problem with function molding when /ALL refinement is
provided.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    load mold/all context [test: func [arg] [print arg]]
</B></PRE></TD></TR></TABLE>
<P>
<A NAME="section-4.8.3"><H4>4.8.3 FTP</H4></A>
<P>Two fixes:</P>
<P>When connecting to a Microsoft IIS based FTP server Rebol did
not recognize folders correctly.  They were marked as type
'directory but no slash was appended to the file name as done
with other types of FTP servers.</P>
<P>In FTP soft-links can now be identified. They can now return an
file type of 'LINK.</P>
<P>Thanks: Cal and Reichart at Prolific.com for submitting the
above FTP fixes.</P>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-5"><H2>5. Core 2.5.1</H2></A>
<BLOCKQUOTE>
</BLOCKQUOTE>
<P>
<A NAME="section-5.1"><H3>5.1 Source Code Form for Values of NONE, TRUE, etc.</H3></A>
<BLOCKQUOTE>
<P>To better support persistent values between SAVE, MOLD, and
LOAD, a new syntactic element has been added to REBOL.</P>
<P>In the past, the source code representation of values like NONE
and TRUE required evaluation in order to convert those words
into their actual values. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    load "NONE"
</B></PRE></TD></TR></TABLE>
<P>would return the word NONE, not the value none.  This required
that your code either evaluate the result (with DO, REDUCE, or
TRY) or manually convert the NONE word with code such as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    if value = 'none [value: none]
</B></PRE></TD></TR></TABLE>
<P>Thus, if you were storing REBOL data using MOLD or SAVE
functions, when you read the data back in, you would need to
either evaluate it (e.g. with REDUCE) or add checks for a few
specific types of words (as shown above).</P>
<P>To better handle this situation with the literal expression of
NONE, TRUE, FALSE, and other values that require evaluation, a
new syntactic form has been added to the language:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #[datatype value]
</B></PRE></TD></TR></TABLE>
<P>Where datatype indicates the datatype and value provides its
value. For simple datatypes such as NONE, TRUE, and FALSE the
shorthand form:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #[word]
</B></PRE></TD></TR></TABLE>
<P>is also allowed.  For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #[none]
</B></PRE></TD></TR></TABLE>
<P>expresses the value NONE, not the word NONE, even with unevaluated
code or data.  Similarly,</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #[true]
    #[false]
</B></PRE></TD></TR></TABLE>
<P>express the values of TRUE and FALSE within non-evaluated code.</P>
<P>The LOAD, DO, and other source translating functions have been
expanded to accept this new syntax. The example below helps show
the change:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    block: load " none #[none] true #[true] "

    foreach value block [print type? value]

    word
    none
    word
    logic
</B></PRE></TD></TR></TABLE>
<P>The literal expression of REBOL objects is also allowed by this
new format. For example the non-evaluated expression:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    #[object! [name: "Fred" skill: #[true]]]
</B></PRE></TD></TR></TABLE>
<P>is equivalent evaluating:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    make object! [
        name: "Fred"
        skill: true
    ]
</B></PRE></TD></TR></TABLE>
<P>Thus, a persistent (mold/load symmetric) form of objects now
becomes available to programmers.</P>
<P>To create or save source code or data using these new datatype
expressions, the MOLD and SAVE functions have been given a
new refinement called /ALL.  This refinement will output the
new #[] format for necessary values.  For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    mold/all reduce ["Example" true none time]
</B></PRE></TD></TR></TABLE>
<P>word return the string:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ["Example" #[true] #[none] 5-May-2002/9:08:04-7:00]
</B></PRE></TD></TR></TABLE>
<P>Similarly, using SAVE/ALL would store the above expression
to a file.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-5.2"><H3>5.2 Less Aggressive Evaluation (Important!)</H3></A>
<BLOCKQUOTE>
<P>Variables are no longer aggressively evaluated.</P>
<P>In pervious versions of REBOL, variables that held set-words,
parens, paths, and other types of evaluative datatypes would be
evaluated on reference. That is no longer the case.</P>
<P>For example, in earlier versions, if you wrote:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    a: first [b/c/d]
    print a
</B></PRE></TD></TR></TABLE>
<P>the result would be an evaluation of b/c/d. This evaluation
caused problems because it is more common to reference such
data, not evaluate it. For instance, you want to be able
to write:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    data: ["test" A: mold/only (10 + 2.5)]

    foreach value data [print value]
</B></PRE></TD></TR></TABLE>
<P>and smoothly traverse the elements of the data block as simple
values.  You would not want those values to self evaluate.</P>
<P>This change to evaluation has some deeper implications. For
example, it affects any function that specifies literal values
within arguments. For example, code such as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    f: func ['word] [print word]
</B></PRE></TD></TR></TABLE>
<P>The REBOL design definition of a literal function argument is to
accept the argument always as a literal value and NOT evaluate
it. However, in the actual implementation it turned out that an
evaluation would normally occur when the variable was referenced.
(As part of the PRINT in this case.)</P>
<P>For instance, if you passed:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    f a/b/c
</B></PRE></TD></TR></TABLE>
<P>within the function, the reference to the word would cause the
path to be evaluated at that point.  Hence, if you referred to
the word argument three times, each time it would be evaluated.</P>
<P>This implicit and "aggressive" evaluation, while interesting, was
not intuitive and created to hard to find errors with difficult
to interpret error messages.</P>
<P>Consider the case where the set-word datatype might be passed
as the argument:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    f test:
</B></PRE></TD></TR></TABLE>
<P>The set word is then evaluated where WORD appeared (in the PRINT
line), and it would require an argument.  The code would produce
an error message that would tell you that the set required an
argument. Yet, you would see no set within your code. It would
look like an interpreter flaw, when in fact it was doing
precisely what you asked.</P>
<P>Since the vast majority of REBOL programs do not rely on this
type of evaluation, we've taken it out.  This cleans up the
semantics of literal arguments, but it also means that where
programs depend on passing non-literals and assume that
evaluation occurs, they do not. That will break some code, but
it is rare.  (For example, in the entire source code base of
REBOL Technologies, there was only one such case.)</P>
</BLOCKQUOTE>
<P>
<A NAME="section-5.3"><H3>5.3 COMPOSE/ONLY Inserts Blocks</H3></A>
<BLOCKQUOTE>
<P>The COMPOSE function now has an /ONLY refinement similar to the
INSERT/ONLY refinement.  When /ONLY is specified, blocks that
are inserted are inserted only as blocks, not as the elements of
the block (the default).  A REDUCE on the block is not required.</P>
<P>For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; block: [1 2 3]

    &gt;&gt; compose [example (block)]
    == [example 1 2 3]

    &gt;&gt; compose [example (reduce [block])]
    == [example [1 2 3]]

    &gt;&gt; compose/only [example (block)]
    == [example [1 2 3]]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-5.4"><H3>5.4 REMOVE-EACH - Easy Series Element Removal</H3></A>
<BLOCKQUOTE>
<P>The new function REMOVE-EACH works in a similar fashion to
FOREACH and makes removing values from strings, blocks, and
other series much easier.</P>
<P>Also, in most cases REMOVE-EACH is many times faster than using
a WHILE loop and the REMOVE function.</P>
<P>The format of REMOVE-EACH is identical to FOREACH except that
it uses the result of the block expression to determine removal.
REMOVE-EACH iterates over one or more elements of a series and
evaluates a block for each.  If the block returns FALSE or NONE,
nothing is removed, but if the block returns any other value,
the items or items are removed.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    remove-each value series [expression]
</B></PRE></TD></TR></TABLE>
<P>Similar to FOREACH, REMOVE-EACH can operate on multiple elements
from the series (and uses the appropriate skip to get to the next
set of elements):</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    remove-each [val1 val2 val3] series [expression]
</B></PRE></TD></TR></TABLE>
<P>Note that in addition to modifying the series, REMOVE-EACH also
returns the series as its result.</P>
<P>Here are a number of examples.</P>
<P>To remove the odd numbers from block:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; blk: [1 22 333 43 58]
    &gt;&gt; remove-each item blk [odd? item]
    == [22 58]
    &gt;&gt; probe blk
    == [22 58]
</B></PRE></TD></TR></TABLE>
<P>To remove all numbers greater than 10 from block:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; blk: [3 4.5 20 34.5 6 50]
    &gt;&gt; remove-each item blk [item &gt; 10]
    == [3 4.5 6]
    &gt;&gt; probe blk
    == [3 4.5 6]
</B></PRE></TD></TR></TABLE>
<P>To remove all directories from a directory listing:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; dir: load %.
    &gt;&gt; remove-each file dir [#"/" = last file]
    == [%calculator.r %clock.r %console.r %find-file.r...]
</B></PRE></TD></TR></TABLE>
<P>To keep only the directories in the listing:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    remove-each file load %. [#"/" &lt;&gt; last file]
</B></PRE></TD></TR></TABLE>
<P>To remove keep only the .doc files from the listing:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    remove-each file load %. [not suffix? ".doc"]
</B></PRE></TD></TR></TABLE>
<P>Here is an example of a block that uses multiple values:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    blk: [
        1 "use it"
        2 "rebol"
        3 "great fun"
        4 "the amazing bol"
    ]

    remove-each [num str] blk [odd? num]

    remove-each [num str] blk [not find str "bol]
</B></PRE></TD></TR></TABLE>
<P>REMOVE-EACH also removes characters from a string:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt;  str: "rebol is fun to use"

    &gt;&gt;  remove-each chr str [chr = #"e"]
    == "rbol is fun to us"

    &gt;&gt;  remove-each chr str [find "uno " chr]
    == "rblisfts"
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-5.5"><H3>5.5 ATTEMPT for Error Handling</H3></A>
<BLOCKQUOTE>
<P>The ATTEMPT function is a shortcut for the common REBOL idiom:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    error? try [block]
</B></PRE></TD></TR></TABLE>
<P>The format for ATTEMPT is:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    attempt [block]
</B></PRE></TD></TR></TABLE>
<P>ATTEMPT is useful in the cases where you either do not care
about the error result or you want to make simple types of
decisions based on the error.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    attempt [make-dir %fred]
</B></PRE></TD></TR></TABLE>
<P>ATTEMPT returns the result of the block if an error did not
occur.  If an error did occur, a NONE is returned.</P>
<P>In the line:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    value: attempt [load %data]
</B></PRE></TD></TR></TABLE>
<P>the value may be set to NONE if the %data file cannot be loaded
(e.g. it's missing or contains an error).  This allows you to
write conditional code such as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    if not value: attempt [load %data] [alert "Problem"]
</B></PRE></TD></TR></TABLE>
<P>Or, even simpler:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    value: any [attempt [load %data] 1234]
</B></PRE></TD></TR></TABLE>
<P>In this line, if the file cannot be loaded, then the value is
set to 1234.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-5.6"><H3>5.6 EXTRACT Function Updated</H3></A>
<BLOCKQUOTE>
<P>The EXTRACT function now includes an /INDEX refinement to allow
you to specify what "column" you want to extract.  For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    data: [
        10 "fred" 1.2
        20 "bob" 2.3
        30 "ed" 4.5
    ]

    &gt;&gt; probe extract/index data 3 2
    == ["fred" "bob" "ed"]
</B></PRE></TD></TR></TABLE>
<P>If index is not supplied, then the first column is extracted.</P>
<P>In addition, the extract function has been fixed to properly
extract blocks from a block series.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-5.7"><H3>5.7 SAVE to Memory</H3></A>
<BLOCKQUOTE>
<P>The SAVE function can now write its results into memory. This is
useful because the SAVE function contains formatting refinements
that are found no where else.</P>
<P>To use SAVE to write to memory, specify a binary value rather
than a file name. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    bin: make binary! 20000 ; (auto expands if necessary)

    image: load %fred.gif

    save/png bin image
</B></PRE></TD></TR></TABLE>
<P>Now the BIN binary holds the PNG formatted image. It was not
necessary to write it to a file and read it back in.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-5.8"><H3>5.8 SEND Refinements /Subject /Attach</H3></A>
<BLOCKQUOTE>
<P>The SEND function used for sending email has been extended to
easily allow a subject line to be specified with a /SUBJECT
refinement. This is a handy shortcut. For example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    letter: read %letter.txt

    send/subject luke@rebol.com letter "Here it is!"
</B></PRE></TD></TR></TABLE>
<P>The above example will send the text of the letter with a
subject line as specified.  If the /SUBJECT refinement is
not given, then the first line of the letter would be used
as the subject.</P>
<P>In addition, the SEND function can now include attachment files
by providing an /ATTACH refinement. A single file or multiple
files can be attached. The specified files can be read from disk
or can be provide as a filename and data. The formats are:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    send/attach user letter file

    send/attach user letter [file1 file2 ...]

    send/attach user letter [[%filename data] ...]
</B></PRE></TD></TR></TABLE>
<P>You can also combine the last two above formats.</P>
<P>Example attachments are:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    user: luke@rebol.com
    letter: read %letter.txt

    send/attach user letter %example.r

    send/attach user letter [%file1.txt %file2.jpg]

    send/attach user letter compose/deep [
        [%options.txt (mold system/options)]
    ]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-5.9"><H3>5.9 Difference for Date/time</H3></A>
<BLOCKQUOTE>
<P>The DIFFERENCE function will now provide the time difference
(hours, minutes, seconds) between two date/time values.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; difference now 1-jan-2000
    == 20561:20:26
</B></PRE></TD></TR></TABLE>
<P>Normally, when you subtract date/time the result is the number
of days, not time:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; now - 1-jan-2000
    == 856
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-5.10"><H3>5.10 System Port Added</H3></A>
<BLOCKQUOTE>
<P>The system port component was added. This component allows
direct access to various OS-specific features.  For example, the
system port can catch Unix and Linux termination signals and
perform a controlled shutdown.  Under Win32, this port can be
used to access win-messages.</P>
<P>More information about the System Port component will be
provided as a separate document.</P>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-6"><H2>6. Core 2.5.0</H2></A>
<BLOCKQUOTE>
</BLOCKQUOTE>
<P>
<A NAME="section-6.1"><H3>6.1 New Sort Function</H3></A>
<BLOCKQUOTE>
<P>Several changes and additions have been made to SORT to add
functionality, including reverse sorting, hierarchical sorting
(sorting on more than one field), sorting of only part of a
series, stable sorting (items that are "equal" are not swapped
during sorting), and easier specification of sort criteria
(without the need for a custom comparator function). The
new SORT function is fully backward-compatible.</P>
<P>
<A NAME="section-6.1.1"><H4>6.1.1 Terminology</H4></A>
<TABLE cellspacing="6" border="0" width="95%">
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>Record</B></TD><TD valign="top">A single logical item in the series to sort. Usually a
character if the series to sort is a string, or a value if the
series to sort is a block. If the /skip refinement is used then
a record consists of multiple, consecutive elements in the
series.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>Field</B></TD><TD valign="top">A part of a record. With the /skip refinement and a
skip length of n a field is one of n elements in the record. If
the /skip refinement is not used and the series to sort is a
block which contains sub-blocks, then a field is one item of a
sub-block (NOT the complete sub-block). This allows field-wise
sorting of blocked records. In all other cases a field is
identical to a record (i.e. each record has exactly one field).
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>Field offset</B></TD><TD valign="top">An integer specifying the offset of a field
within a record. For a record consisting of n fields a field
offset can be between 1 and n.
</TD></TR>
</TABLE>
<P>
<A NAME="section-6.1.2"><H4>6.1.2 Arguments</H4></A>
<P>In addition to the series to sort, the new sort action accepts
the following refinements. New behavior is marked with [NEW].</P>
<TABLE cellspacing="6" border="0" width="95%">
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/case</B></TD><TD valign="top">Sort case-sensitive. This only has an effect for fields of type
string or character.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/skip size</B></TD><TD valign="top">Treat series as records of fixed size. size is of type integer.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/all</B></TD><TD valign="top">Used in combination with the /skip refinement. [NEW] By default only a single
field in a record is used for comparison. If the /all refinement is used then
all fields in a record are used for comparison.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/compare comparator</B></TD><TD valign="top">Specify a custom comparator. This can be a field offset
(type integer [NEW]), a comparator function, or a comparator block [NEW]. See
below.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/reverse</B></TD><TD valign="top">Sort in reverse. [NEW]
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>/part size</B></TD><TD valign="top">Sort only part of a series. (Similar to the use of the /part
refinement in copy or change [NEW]).
</TD></TR>
</TABLE>
<P>
<A NAME="section-6.1.3"><H4>6.1.3 Comparators</H4></A>
<P>Sorting is performed by comparing and swapping elements, i.e. comparators
define the sort order. The following comparators are supported:</P>
<UL>
<LI>No comparator (i.e. no /compare refinement).
In this case the first field in each record is used for
comparison. If the /all refinement is used then all fields in each
record are used for comparison. /case and /reverse are observed normally.
<LI>Field offset (integer) [NEW]. Specifies the field to use for comparison. If the
/all refinement is used as well then the specified field is the first field
to use, and all subsequent fields are used as well. /case and /reverse are
observed normally.
<LI>Function. Function called by the sort action to compare two records. The records
are passed as arguments, and the function needs to return -1, 0 or 1, if the
first record is smaller than, equal to or greather than the second record, respectively. [NEW]
For backward compatibility the function may also return true or false, where true indicates
that the first record is less than or equal to the second record, and false indicates
that the first record is greater than the second record. /case is ignored. /reverse is
observed normally, i.e. /reverse inverts the meaning of the comparator function. If the /skip
refinement is used then the argument passed to the comparison function only consists of the
first field in the record, not the complete record. This is for backward compatibility with
the old sort function. In order to pass the complete record, in a block, use the /all
refinement.
<LI>Block [NEW]. Comparison dialect specifying the type of comparison in more detail. See
below.
</UL>
<P><B>Comparison Refinements</B></P>
<P>The following items can appear in a comparison block:</P>
<TABLE cellspacing="6" border="0" width="95%">
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>field offset (integer)</B></TD><TD valign="top">Specifies the offset of the next field to compare.
Fields are compared in the order specified.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>reverse (word)</B></TD><TD valign="top">Sets the comparison for all subsequently specified fields to
reverse.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>forward (word)</B></TD><TD valign="top">Sets the comparison for all subsequently specified fields to
forward (opposite of reverse).
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>case (word)</B></TD><TD valign="top">Makes the comparison for all subsequently specified fields
case-sensitive.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>no-case (word)</B></TD><TD valign="top">Makes the comparison for all subsequently specified fields
case-insensitive (opposite of case).
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>to (word) field offset (integer)</B></TD><TD valign="top">Specifies a range of fields to compare,
e.g. [1 to 5] compares fields one to five.
</TD></TR>
</TABLE>
<P>With comparison blocks the /all, /case and /reverse refinements slightly change
their behaviors: /all is equivalent to adding "to max-field" to the end of the
comparison block, i.e. when the end of the comparison block is reached comparison
continues until the end of the record is reached. /case specifies that the default
case mode (until a case or no-case word is reached) is case-sensitive. Otherwise
it is case-insensitive. /reverse reverses the resulting list as a whole, and is
independent of the reverse/forward words in the comparison block.</P>
<P><B>Examples</B></P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; a: [10 "Smith" "Larry" 20 "Smith" "Joe" 80 "Brown" "Harry" 50 "Wood" "Jim"]

    &gt;&gt; sort/skip a 3     ; sorts on the first field (number)

    == [10 "Smith" "Larry" 20 "Smith" "Joe" 50 "Wood" "Jim" 80 "Brown" "Harry"]

    &gt;&gt; sort/skip/compare a 3 2     ; sorts on the second field (last name)

    == [80 "Brown" "Harry" 10 "Smith" "Larry" 20 "Smith" "Joe" 50 "Wood" "Jim"]

    &gt;&gt; sort/skip/compare/all a 3 2  
       ; sorts on the second field and following fields (last name and first name)

    == [80 "Brown" "Harry" 20 "Smith" "Joe" 10 "Smith" "Larry" 50 "Wood" "Jim"]

    &gt;&gt; sort/skip/reverse a 3     ; sorts on the first field (number), in reverse

    == [80 "Brown" "Harry" 50 "Wood" "Jim" 20 "Smith" "Joe" 10 "Smith" "Larry"]

    &gt;&gt; sort/skip/compare a 3 [2 reverse 3]
       ; sorts on the last name forward, and the first name in reverse

    == [80 "Brown" "Harry" 10 "Smith" "Larry" 20 "Smith" "Joe" 50 "Wood" "Jim"]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-6.2"><H3>6.2 File Modes</H3></A>
<BLOCKQUOTE>
<P>GET-MODES and SET-MODES functions have been added for file and
network ports. Two new port actions are introduced:</P>
<TABLE cellspacing="6" border="0" width="95%">
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>get-modes</B></TD><TD valign="top">Return current modes for an open port.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>set-modes</B></TD><TD valign="top">Change modes for an open port.
</TD></TR>
</TABLE>
<P>The get-modes function has the following syntax:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    get-modes: native [
        {Return mode settings for a port}
        target [file! url! block! port!]
        modes [word! block!]
    ]
</B></PRE></TD></TR></TABLE>
<P>The block being passed in consists of words defining which modes should be queried.
Each word corresponds to one mode. get-modes returns a block which contains pairs
of mode names and current mode settings.</P>
<P>Example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes someport [direct binary]
    == [direct: true binary: false]
</B></PRE></TD></TR></TABLE>
<P>indicating that someport is opened in direct and non-binary (text) mode.</P>
<P>Alternatively a single word can be passed in, in which case get-modes returns
the value directly, without putting it into a name-value block.</P>
<P>Example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes someport 'binary
    == false
</B></PRE></TD></TR></TABLE>
<P>As another alternative a name/value-paired block can be passed in, of the
same format as the block get-modes returns. In that case the values are
ignored.</P>
<P>Example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes someport [direct: none binary: none]
    == [direct: true binary: false]
</B></PRE></TD></TR></TABLE>
<P>The set-modes function has the following syntax:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    set-modes: native [
        {Change mode settings for a port}
        target [file! url! block! port!]
        modes [block!]
    ]
</B></PRE></TD></TR></TABLE>
<P>The block being passed in consists of name-value pairs describing the modes to be
changed. A block returned by get-modes can be passed as an argument to set-modes.
set-modes returns the port that was passed as an argument.</P>
<P>Example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; set-modes someport [direct: false binary: false]
</B></PRE></TD></TR></TABLE>
<P>The mode block accepted by set-modes is actually an object-style initialization
block and allows multiple names to reference the same value.</P>
<P>Example:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; set-modes someport [direct: binary: false]
</B></PRE></TD></TR></TABLE>
<P>
<A NAME="section-6.2.1"><H4>6.2.1 Getting Lists of Modes</H4></A>
<P>get-modes supports a few "special" modes, which do not return mode settings
for a specific port, but rather a set of modes that is applicable for a file
(or directory, socket etc.). These are "file-modes", "copy-modes", "network-modes"
and "port-modes".  If any of these modes are specified in a get-modes request
then the response contains a block of matching modes which are available on the
current filesystem.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes somefileordir 'port-modes
    == [direct binary lines no-wait (...a few more...) ]

    &gt;&gt; get-modes somefileordir 'file-modes
    == [file-note creation-date archived script (...a few more...) ]

    &gt;&gt; get-modes someudpsocket 'network-modes
    == [broadcast multicast-groups type-of-service]
</B></PRE></TD></TR></TABLE>
<P>The above example is for an Amiga. Note that the mode block returned by
any of these special requests is identical for all files and directories within a
filesystem (and all sockets within a scheme), i.e. it varies per platform and possibly
per filesystem and scheme, but not per file or socket. The purpose of this feature is
only to provide a mechanism to obtain a list of supported modes, not to obtain the
actual mode settings. To obtain the actual mode settings for a port the returned
block has to be used in another call to get-modes:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes somefileordir get-modes somefileordir 'file-modes
    == [file-note: "cool graphics" creation-date: 1-Jan-2000 
        archived: true script: false]
</B></PRE></TD></TR></TABLE>
<P>The difference between "file-modes" and "copy-modes" is:</P>
<TABLE cellspacing="6" border="0" width="95%">
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>file-modes</B></TD><TD valign="top">Return all modes of the underlying data (typically a file),
regardless of how it was opened.
</TD></TR>
<TR><TD width="20">&nbsp;</TD><TD valign="top" width="80"><B>copy-modes</B></TD><TD valign="top">Same as file-modes, but only return those modes which are safe
to copy, i.e. which can (and should) be included in a set-modes call when
creating a new file, in order to create an exact clone of an existing file. If a
platform provides file properties which are not safe to copy or which necessarily
vary on copied files (e.g. Unix inodes) then those modes would show up in the
block returned by file-modes, but not by copy-modes.
</TD></TR>
</TABLE>
<P>Copying all file properties from file1 to file2 can be done with the following
call:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; set-modes file2 get-modes file1 get-modes file1 'copy-modes
</B></PRE></TD></TR></TABLE>
<P>
<A NAME="section-6.2.2"><H4>6.2.2 Modes Available</H4></A>
<P><B>File-modes</B></P>
<UL>
<LI>status-change-date, modification-date, access-date, backup-date,
creation-date: REBOL date. modification-date is available on all platforms.
status-change-date is available in Unix. access-date is available in Unix
and Windows. creation-date is available in Windows and MacOS. backup-date
is available in MacOS. All modes are settable and gettable, except that
modification-date and access-date are not settable in Elate.
<LI>owner-name, group-name: REBOL string (user/group name). Available in Unix.
<LI>owner-id, group-id: REBOL integer (user/group id). Available in Unix and
AmigaOS (>=V39).
<LI>owner-read, owner-write, owner-delete, owner-execute,
group-read, group-write, group-delete, group-execute,
world-read, world-write, world-delete, world-execute: REBOL logic. All
-read, -write and -execute modes are available in Unix, BeOS, QNX and
Elate. owner-read, owner-write, owner-execute and owner-delete are
available in AmigaOS. All group- and world- modes are available in
AmigaOS >=V39. owner-write is also available in Windows (mapped to the
inverse of the Windows "read-only" bit).
<LI>comment: REBOL string (file comment). Available in AmigaOS only.
<LI>script, archived, system, hidden, hold, pure: REBOL logic (additional
flags). Script, hold and pure are available in AmigaOS only. Archived is
available in AmigaOS and Windows. System and hidden are available in
Windows only.
<LI>type, creator: REBOL string. Available in MacOS only.
</UL>
<P>Platforms which only support a single file date export it via modification-date.
Similarly, platforms which do not support multi-user file access modes make the
file access modes available via owner-read/write/delete/execute.</P>
<P><B>Port-modes</B></P>
<UL>
<LI>read, write, binary, lines, no-wait, direct: REBOL logic. Binary,
lines and no-wait are settable.
</UL>
<P><B>Network-modes</B></P>
<UL>
<LI>broadcast: REBOL logic. UDP only. Setting this to true allows sending
broadcasts from a socket. All platforms except BeOS.
<LI>multicast-groups: REBOL block of blocks. UDP only, describes which multicast
groups a socket has joined. Each sub-block consists of two IP addresses
(tuples): the multicast group and the IP address of the interface on which
the multicast group was joined. Typically available in MacOS, Windows, most
Unix platforms, QNX and AmigaOS (Miami/MiamiDx only). Availability is
determined at runtime and varies with the OS version and TCP/IP protocol stack
version.
<LI>type-of-service: REBOL integer. UDP and TCP. This is the value of the
8-bit "TOS" field in IP headers. Typical values are 0 (default), 2 (minimize
cost), 4 (maximize reliability), 8 (maximize throughput) and 16 (minimize
latency), but the interpretation of this field is up to the TCP/IP stack and
intermediate routers, and not enforced by REBOL. All platforms except BeOS.
<LI>keep-alive: REBOL logic. TCP only. Setting this to true forces TCP to send
"keep-alive" packets after a certain period of time (typically 4 hours).
All platforms except BeOS.
<LI>receive-buffer-size, send-buffer-size: REBOL integer. UDP and TCP. Size of
receive and send buffer within the TCP/IP stack. Default values and allowed
ranges vary widely between platforms. Primarily useful for UDP. Increasing
this values usually does NOT improve performance. All platforms except BeOS.
<LI>multicast-interface: REBOL string. UDP only. The default interface to use
for multicasting. Same platforms as multicast-groups.
<LI>multicast-ttl: REBOL integer. UDP only. The time-to-live value (maximum
propagation distance) of multicasts. Same platforms as multicast-groups.
<LI>multicast-loopback: REBOL logic. UDP only. If set to true sent multicasts
are looped back to the local socket. Same platforms as multicast-groups.
<LI>no-delay: REBOL logic. TCP only. Disables the Nagle algorithm. Most
protocols perform better if this is set to false. It should only be set to
true if a protocol is interactive in nature AND relies on precise event
timing in combination with queueing (e.g. X11). All platforms except BeOS.
<LI>interfaces: REBOL block of objects. Each object represents one network
interface and currently contains the following fields: "name": interface
name (on some platforms this is a dummy name). "address": local IP address.
"netmask": subnet mask. "broadcast": broadcast address. "remote-address":
remote IP address for point-to-point interfaces. "flags": a block of
words describing interface properties, currently supported words are
"broadcast" (interface supports broadcasting), "multicast" (interface
supports multicasting), "loopback" (interface is the loopback interface)
and "point-to-point" (interface is a point-to-point interface, as opposed
to a multi-drop interface). Some values may be none (e.g. "remote-address"
on a multi-drop interface). In Windows all interfaces appears as multi-drop
(including PPP), with dummy netmasks. Available in all platforms, except
BeOS, Elate, WinCE. Not settable.
</UL>
<P>
<A NAME="section-6.2.3"><H4>6.2.3 Using File Forks</H4></A>
<P>The /custom refinement to read, open and write allows access to different
forks of a file (currently useful for MacOS only).</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    open/custom %myfile [fork "name"] ; Specify which fork to open.
</B></PRE></TD></TR></TABLE>
<P>The specified fork name defines which fork to open:</P>
<P>If no fork is specified (no fork specifier in the custom block or none is
passed instead of "name"), then for non-Mac platforms the file is opened
normally. For Mac the data fork is opened. If the /new refinement is used
then the file size is reset to zero bytes. For Mac this means that all forks
are reset to zero bytes. (Note: this behavior has changed from Core 2.3.
Previously open/new on Macintosh would only reset the size of the data fork,
and there was no way to reset the size of the resource fork.)</P>
<P>If a fork is specified by name then that fork is opened. If the /new refinement
is used then the size of only that fork is reset to zero bytes. If the fork does
not exist (and, for write access, cannot be created) on the current filesystem
then an error is thrown.</P>
<P>Non-Mac platforms only have a single fork named "data". Mac platforms have two
forks, named "data" and "resource".</P>
<P>
<A NAME="section-6.2.4"><H4>6.2.4 Finding All Forks</H4></A>
<P>This is done using the mode mechanism, in a way similar to finding all supported
modes.</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    &gt;&gt; get-modes somefile 'forks
    == ["data" "resource"]
</B></PRE></TD></TR></TABLE>
<P>Example above on Mac. For all other platforms only ["data"] would be returned.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-6.3"><H3>6.3 Serial Port Access</H3></A>
<BLOCKQUOTE>
<P>This specification describes the creation and operation of
serial communication ports within REBOL.  Serial ports were
supported in version 2.3 but were not documented.</P>
<P>
<A NAME="section-6.3.1"><H4>6.3.1 Specifying a Serial Port</H4></A>
<P>Serial ports are created in the same manner as other ports within REBOL.
The scheme name for serial ports is "serial:". URL's are encoded with
the different fields separated by slashes. For example,</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    port: open serial://port1/9600/8/none/1
</B></PRE></TD></TR></TABLE>
<P>The order of values in the serial URL scheme is not significant, as the
type of field can be determined by the content. (Note, you can also use
a MAKE PORT object rather than a URL to specify a serial port.)</P>
<P>The specification of a serial port may include the device number, the
communication speed, the number of data bits, the parity and number of
stop bits. The specification information can be specified directly by
setting the appropriate fields within the port specification object or
by creating a URL which contains the same information. Any field not
specified will be given a default value.</P>
<P>The default serial port settings are:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    device: port1
    speed: 9600
    data-bits: 8
    parity: none
    stop-bits: 1
</B></PRE></TD></TR></TABLE>
<P>Within a port specification, the various parameters are stored in the following
object fields:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    host:           device
    speed:          speed
    data-bits:      data bits
    parity:         parity
    stop-bits:      stop bits
</B></PRE></TD></TR></TABLE>
<P>The portN specification is an indirect reference to the communication device.
It refers to the Nth device defined in the System/ports/serial block.
This block is initialized by default depending on the system being used and
can be modified in user.r to reflect any local requirements.</P>
<P>For example, on Windows the block might be defined as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    System/ports/serial: [ com1 com2 ]
</B></PRE></TD></TR></TABLE>
<P>or if COM1 is being used by the mouse, it might just be:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    System/ports/serial: [ com2 ]
</B></PRE></TD></TR></TABLE>
<P>On unix-style systems, the block might be defined as:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    System/ports/serial: [ ttyS0 ttyS1 ]
</B></PRE></TD></TR></TABLE>
<P>or if the first device should correspond to COM2:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    System/ports/serial: [ ttyS1 ttyS0 ]
</B></PRE></TD></TR></TABLE>
<P>Thus, the ports can be specified in a machine indpendent manner while the
machine specific definition can be controlled using the serial definition
block in System/ports/serial.</P>
<P>
<A NAME="section-6.3.2"><H4>6.3.2 Operation</H4></A>
<P>Serial ports are always opened as direct ports in much the same way as
console and network ports.
They may be opened as either /STRING or /BINARY with the default being
/STRING.
They are opened by default as asynchronous, but may be made synchronous
by using the /WAIT refinement.
When operating asynchronously, any attempts to copy data from the port
will return NONE if no data is present. When operating synchronously,
the copy will block until data is available.</P>
<P>Data can be written to the port using the INSERT native. Data can be read
from the port using the PICK, FIRST or COPY natives with the usual
ramifications. As usual with direct ports, the REMOVE, CLEAR, CHANGE and
FIND functions are not supported.</P>
<P>The UPDATE function can be used to change port parameters. For example,
to change the speed after an initial connection has been established, you could
just do:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ser-port: open serial://9600
    ser-port/speed: 2400
    update ser-port
</B></PRE></TD></TR></TABLE>
<P>Changing the device number or the System/ports/serial and calling UPDATE will have
no effect. Once the port has been opened with a particular device, the device
can't be changed.</P>
<P>There are two additional port fields that can't be set with a URL, but can
be set in a port specification block or by manually changing them.
The RTS-CTS field specifies whether hardware handshaking should be used on
the port. The default is ON. To change the default, do:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ser-port/rts-cts: off
    update ser-port
</B></PRE></TD></TR></TABLE>
<P>A timeout value can be specified by modifying the timeout field in the port
structure. The timeout value only applies to serial ports that are opened
with the /wait refinement. When the timeout expires, a serial port timeout
error will be generated. To set the timeout value do:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    ser-port/timeout: 10        ; 10 second timeout
</B></PRE></TD></TR></TABLE>
<P>Serial ports work properly with the WAIT native.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-6.4"><H3>6.4 Objects</H3></A>
<BLOCKQUOTE>
<UL>
<LI>SYSTEM/LOCALE object added.  Currently has month and day names.
*Weekdays are separate strings in system/locale/days.
<LI>CONTEXT function added as a shortcut to MAKE object!.
<LI>You can now QUERY an object.  QUERY will return a block containing
the fields that have been modified in an object since its creation or
since it was last passed to QUERY/clear. QUERY will return none if
there have not been any changed fields.  QUERY/clear will clear the
modified state of all the fields in an object.
<LI>Objects now accept LOGIC! values as arguments for to pick (for
consistency with blocks).
</UL>
<P>
<A NAME="section-6.4.1"><H4>6.4.1 Make Object Object</H4></A>
<P>You can now make an object out of two other objects, a "template
object" and a "spec object". When making a new object out of two other
objects, the bindings of words coming only from the "spec object" will
be maintained, words shared by both the template object and the spec
object will take their values from the spec object.  This will cause
some differences in behavior because the block spec approach is
lexical and the object spec approach is definitional.</P>
<P>
<A NAME="section-6.4.2"><H4>6.4.2 Third Object</H4></A>
<P>You can use THIRD on the object to get back a block of set-word value
pairs from the object:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    z: make object! [a: 99 b: does [a + 1]]
    t: third z
    == [a: 99 b: func [][a + 1]]
</B></PRE></TD></TR></TABLE>
<P>The block returned from THIRD on an object is like an object spec
block, however the set-words are bound to their object.  This block is
like a snapshot of the object's values at that time. You can also use
the returned block to set values in the object:</P>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
    set first t 199
    z/b
    == 200
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-6.5"><H3>6.5 Mold and Load Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>MOLD/only does not produce the outermost [] in the resulting string.
<LI>Molding a recursive block or object will print [...] when on the
second instance of the recursive item. So, you can now PRINT MOLD SYSTEM !
<LI>Molding strings greater that 50 characters containing unbalanced
"{" characters are now reloadable.
<LI>Added /all refinement to LOAD.  LOAD/all of a script does not
evaluate the REBOL header. LOAD/all always returns a block.
<LI>LOAD/next/header results in a block with the evaluated header followed
by the rest of the script as a string.
<LI>Loading strings with CTRL chars greater than CTRL-Z now allowed.
<LI>Added script HEADER/CONTENT field. When set TRUE, the script's entire
source text can be accessed from SYSTEM/SCRIPT/HEADER/CONTENT
(when evaluated with DO) or from the header object (when loaded with
LOAD/header or LOAD/next/header).  This allows your script to access
other data that may be part of its script file (e.g. the REBOL archive
format, RIP).
</UL>
<P>LOAD function refinement combinations:</P>
<TABLE BORDER="1" CELLSPACING="0" CELLPADDING="4"><TR BGCOLOR="#E0E0E0"><TD><B>
<P>LOAD/Refinement</P>
</B></TD><TD><B>
<P>Eval Header?</P>
</B></TD><TD><B>
<P>Returns</P>
</TD></TR><TR><TD>
<P>load</P>
</TD><TD>
<P>yes</P>
</TD><TD>
<P>returns script (data). If file contains a single value (like 1234), then
this returns just that value. If there are multiple values, then it
returns a block.</P>
</TD></TR><TR><TD>
<P>load/next</P>
</TD><TD>
<P>no</P>
</TD><TD>
<P>[first-val { rest of script }] -- returns a value followed by a string.
This refinement lets you parse REBOL files, one value at a time (for
operations like pretty printing and colorizing.)</P>
</TD></TR><TR><TD>
<P>load/next/header</P>
</TD><TD>
<P>yes</P>
</TD><TD>
<P>[header-obj {rest of script}] -- same as load/next but includes the
evaluated header object.</P>
</TD></TR><TR><TD>
<P>load/header</P>
</TD><TD>
<P>yes</P>
</TD><TD>
<P>[header-obj rest of script] -- returns the script, starting with the
REBOL header as the first value.</P>
</TD></TR><TR><TD>
<P>load/all</P>
</TD><TD>
<P>no</P>
</TD><TD>
<P>[all of script as data] -- returns the script, always as a block, even
if it's just a single value (very handy for cases where you always want
data as a block, even if it's a single value).</P>
</TD></TR><TR><TD>
<P>load/next/all</P>
</TD><TD>
<P>no</P>
</TD><TD>
<P>[first-val { rest of script }]</P>
</TD></TR><TR><TD>
<P>load/header/all</P>
</TD><TD>
<P>yes</P>
</TD><TD>
<P>[header-obj rest of script]</P>
</TD></TR><TR><TD>
<P>load/next/header/all</P>
</TD><TD>
<P>yes</P>
</TD><TD>
<P>[header-obj {rest of script}]</P>
</TD></TR></TABLE><P>
<P>The ALL refinement will be ignored when other refinements are
present.</P>
</BLOCKQUOTE>
<P>
<A NAME="section-6.6"><H3>6.6 File and Port Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>Added asynchronous wait-able DNS for Unix and Windows. For example: open
dns:///async, then insert/wait/copy.
<LI>Asynchronous HTTP better supported. You can open/direct/no-wait
an HTTP request and use WAIT and COPY to receive the results as
they arrive.
<LI>WAIT [0 port] now returns the port if it has data, none otherwise.
<LI>Added WAIT/all refinement, which causes wait to return a block of all
ports that have data.
<LI>The /no-wait refinement allows a port to be opened in non-blocking mode.
COPY on a non-blocking port returns an empty string unless the end of the port
has been reached, in which case it returns none.
<LI>WAIT now supports port handlers (http, tcp etc.) in /direct mode.
<LI>Added AWAKE field in port-specs and root protocol to specify a block or
function called when wait is about to wake up. Used to implement
background processing.
<LI>WAIT works correctly on /lines ports opened without /with.
<LI>TO-LOCAL-FILE and TO-REBOL-FILE functions can be used to convert
to and from the local OS file path formats.
<LI>Added local-port, remote-ip and remote-port fields to port spec for
consistent values independent of port creation.
<LI>MAKE-DIR/deep creates all needed directories in a long path.
<LI>CONNECTED? native for most platforms.
<LI>Fixed incorrect port-id assignment on accepted sockets.
<LI>Fixed bug that would prevent UDP listen sockets from responding to
packets from different origins.
<LI>SPLIT-PATH was modified to properly split the path and target of a
file path.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.7"><H3>6.7 Network Protocol Change (APOP, IMAP)</H3></A>
<BLOCKQUOTE>
<UL>
<LI>Added APOP - Authentication for pop:// that does not send passwords to
the server in clear text.
<LI>Added imap:// protocol. URL format and behavior identical to pop://,
plus additional URL formats specified in RFC 2192.
<LI>Fixed SEND when /header and no FROM address is given
<LI>Fixed do-send to change email lines with only a single "." to have two
periods so those emails will not blow out anymore.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.8"><H3>6.8 Data Series Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>HASH! and LIST! datatypes now offer more complete, consistent, reliable,
and faster operation.
<LI>The SELECT, FIND, UNION, INTERSECT, EXCLUDE, DIFFERENCE, and UNIQUE
functions accept a /skip refinement to specify data size.
<LI>UNIQUE accepts the /case refinement.
<LI>TO-BINARY of tuples now uses the tuple values instead of forming the
tuple.
<LI>JOIN on binary values now joins as binaries, not FORMed strings.
<LI>FIND now works on all types of functions properly.
<LI>FIND/REVERSE works for bitsets.
<LI>Pick on objects and functions with negative number fixed.
<LI>Fixed bug in ENBASE that could cause invalid characters to be
inserted into a base-64-encoded string.
<LI>Removed /only refinement from DIFFERENCE (EXCLUDE is equivalent).
<LI>MINIMUM-OF and MAXIMUM-OF series.  You can use MINIMUM-OF and
MAXIMUM-OF on a single series argument which will return the series
offset to the least or greatest contained value respectively. Eg:
</UL>
<TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="4" BGCOLOR="#E8E8E8"><TR><TD><PRE><B>
   minimum-of reduce [pi .099 10 * 100]
   == [0.099 1000]   

   maximum-of reduce [pi .099 10 * 100]
   == [1000]
</B></PRE></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
<A NAME="section-6.9"><H3>6.9 Math Related Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>Added CHECKSUM/secure and RANDOM/secure, producing cryptographically
secure checksums and random numbers respectively.
<LI>Added CHECKSUM/hash and CHECKSUM/method (same as checksum/secure, but
with a selectable algorithm: 'md5 or 'sha1), and checksum/key
(calculates a keyed message digest). MD5 added as an alternative
checksum algorithm.
<LI>Subtraction of a date! value months bug fixed.
<LI>Time! values can convert to integers and decimals.
<LI>NOW/precise returns greater precision on time.  Useful for timing
events.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.10"><H3>6.10 Command Line Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>REBOL startup command line now accepts "--" to signal the end of startup
switches.  Remaining items on the command line are arguments to be
passed to the REBOL script.  This also allows REBOL to start without a
script but with arguments passed.
<LI>When starting from the command line, system/script/args == string of
all args, system/options/args == block of separate args.  All items
following the specification of the script are considered arguments.
<LI>REBOL now deals with arbitrary amount of command line arguments-- no
fixed size.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.11"><H3>6.11 Console</H3></A>
<BLOCKQUOTE>
<UL>
<LI>Console tab completion now completes as much of the defined word or
file path as possible.
<LI>Added proper console reinitialization code when REBOL is woken up
after Ctrl-Z followed by "fg" (for Unix and shells with job control).
<LI>File name completion in the console is now case-insensitive for
operating systems that have case-insensitive file systems (Windows,
AmigaOS etc.)
<LI>Screen now gets cleared on first console output, not signon message.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.12"><H3>6.12 Control</H3></A>
<BLOCKQUOTE>
<UL>
<LI>A BREAK used in the first block of a WHILE will cause a BREAK
from the while loop.
<LI>CATCH and THROW work more reliably in more cases.
<LI>FOREACH returns correct value on empty series.
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.13"><H3>6.13 Interpreter</H3></A>
<BLOCKQUOTE>
<UL>
<LI>Binding speed greatly improved for top-level words.
<LI>Indefinite extent fixed for many cases (the USE function).
</UL>
</BLOCKQUOTE>
<P>
<A NAME="section-6.14"><H3>6.14 Other Changes</H3></A>
<BLOCKQUOTE>
<UL>
<LI>HAS function added as a shortcut to define functions with local
variables but no arguments.
<LI>Fixed CONFIRM to throw error on bad pick operation.
</UL>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-7"><H2>7. Interpreter Fixes</H2></A>
<BLOCKQUOTE>
<P>The following internal interpreter problems have been fixed.</P>
<OL>
<LI>Series Expansion: Significant performance and memory problem
has been fixed resulting in many times greater speed in some
types of uses.  This change speeds up MOLD and SAVE by many
times.
<LI>Lit-path! comparison works properly
<LI>Time zone bug in date comparison fixed
<LI>Handling of "--" in command line arguments
<LI>Tab expansion of words in console
<LI>Component version numbers added to the boot message
<LI>Increased the global word limit to 8000
<LI>Potential crash during expansion and recycling of hash! values
<LI>Potential crash when recycling open, unreferenced ports
<LI>Port cleanup to close ports in the correct order
</OL>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-8"><H2>8. Networking Fixes</H2></A>
<BLOCKQUOTE>
<P>The following fixes were made to networking:</P>
<OL>
<LI>DNS - Unix only: fixed lockup when DNS helper process dies
unexpectedly.
<LI>DNS - Unix only: DNS helper process no longer remains a
"zombie" if the main process is killed.
<LI>FTP - conflicts with generic proxy setups fixed
<LI>FTP - allow more response codes from CWD command in FTP
<LI>HTTP - proxy authentication added
<LI>HTTP - POST linefeed conversion problem fixed
<LI>HTTP - forwarding fixed where host name in header was not updated
<LI>POP - will try APOP if port/algorithm is set to 'apop (workaround for bug in some POP servers).
<LI>TCP - On Windows only: TCP listen sockets no longer allow multiple
listeners on the same port. Workaround for bug in Windows TCP/IP
stack regarding SO_REUSEADDR.
</OL>
</BLOCKQUOTE>
<P>
<HR>
<A NAME="section-9"><H2>9. Other Function Fixes</H2></A>
<BLOCKQUOTE>
<P>Fixes to natives and functions include:</P>
<OL>
<LI>COMPRESS/DECOMPRESS - series offsets are now allowed
<LI>DEBASE - potential crash fixed
<LI>DEBASE - series offsets are now allowed
<LI>FIND - when using bitset with chars greater than 127
<LI>FIND/MATCH/CASE - fixed
<LI>LOAD/MARKUP - potential crash fixed
<LI>MAKE - potential crash with make object! object! fixed
<LI>MAKE-DIR/DEEP - fixed bug
<LI>SET-MODES - fixed file date setting when no time value is provided
<LI>SORT - handles hashed blocks now, and potential crashes fixed
<LI>UNION, INTERSECT, etc. - series offsets are now allowed on the second argument
</OL>
</BLOCKQUOTE>
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0"><TR><TD COLSPAN="3"><HR></TD></TR><TR><TD VALIGN="TOP"><FONT COLOR="#808080" SIZE="1">REBOL/MakeDoc 2.0</FONT></TD><TD VALIGN="TOP"><P ALIGN="CENTER"><FONT COLOR="#808080" SIZE="1">REBOL is a registered trademark of REBOL Technologies<BR>Copyright 2003 REBOL Technologies</FONT></P></TD><TD VALIGN="TOP" NOWRAP><P ALIGN="RIGHT"><FONT COLOR="#808080" SIZE="1">6-Aug-2003</FONT></P></TD></TR></TABLE>
</TD></TR>
</TABLE>
</CENTER>
<MAP NAME="bar-map">
<AREA SHAPE="RECT" COORDS="0,0,150,28" HREF="http://www.rebol.com">
<AREA SHAPE="RECT" COORDS="175,0,275,28" HREF="http://www.rebol.com/docs.html">
<AREA SHAPE="RECT" COORDS="285,0,365,28" HREF="http://www.rebol.com/docs/core23/rebolcore.html">
<AREA SHAPE="RECT" COORDS="375,0,445,28" HREF="http://www.rebol.com/docs/dictionary.html">
<AREA SHAPE="RECT" COORDS="452,0,500,28" HREF="http://www.rebol.com/library.html">
<AREA SHAPE="RECT" COORDS="510,0,575,28" HREF="http://www.rebol.com/feedback.html">
</MAP>
</BODY>
</HTML>
"
}